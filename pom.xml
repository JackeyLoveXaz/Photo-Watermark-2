<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.photowatermark</groupId>
    <artifactId>Photo-Watermark-2</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 默认打包类型，可以通过命令行覆盖 -->
        <packaging.type>exe</packaging.type>
    </properties>

    <dependencies>
        <!-- JavaFX 依赖 -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>17.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>17.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>17.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>17.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>17.0.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>com.photowatermark.Main</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 用于打包为可执行jar文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>com.photowatermark.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- 用于创建平台特定的安装程序 (Windows EXE, macOS DMG) -->
            <!-- 注意：这个插件不会在默认构建中执行，需要使用特定的profile -->
        </plugins>
    </build>
    
    <!-- 打包配置文件，用于生成平台特定的安装程序 -->
    <profiles>
        <profile>
            <id>create-installer</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>create-native-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>jpackage</executable>
                                    <arguments>
                                        <argument>--name</argument>
                                        <argument>PhotoWatermark</argument>
                                        <argument>--input</argument>
                                        <argument>${project.build.directory}</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}-jar-with-dependencies.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.photowatermark.Main</argument>
                                        <argument>--type</argument>
                                        <argument>${packaging.type}</argument>
                                        <argument>--output</argument>
                                        <argument>${project.build.directory}/installer</argument>
                                        <argument>--java-options</argument>
                                        <argument>--enable-preview</argument>
                                        <argument>--description</argument>
                                        <argument>图片水印工具 - 大语言模型辅助软件工程作业2</argument>
                                        <argument>--vendor</argument>
                                        <argument>PhotoWatermark Team</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>